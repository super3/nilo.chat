name: Deploy API to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      # Run tests with coverage before building
      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Build
        run: npm run build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy with Git
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to parent directory first
            cd /var/www
            
            # If repo doesn't exist, clone it
            if [ ! -d "nilo-chat" ]; then
              git clone https://github.com/super3/nilo.chat.git nilo-chat
            fi
            
            # Enter the directory with explicit path
            cd /var/www/nilo-chat
            
            # Check if we're in a git repository
            if [ ! -d ".git" ]; then
              echo "Error: .git directory not found, initializing git repository"
              git init
              git remote add origin https://github.com/super3/nilo.chat.git
              git fetch
            fi
            
            # Backup any local changes (like env files)
            git stash || true
            
            # Pull latest changes
            git fetch origin main
            git reset --hard origin/main
            
            # Restore potential local changes
            git stash pop || true
            
            # Create .env file if it doesn't exist
            if [ ! -f ".env" ]; then
              echo "Creating default .env file"
              echo "NODE_ENV=production" > .env
              echo "PORT=3000" >> .env
              echo "CORS_ORIGIN=https://nilo.chat" >> .env
            fi
            
            # Install production dependencies
            npm install --omit=dev
            
            # Explicitly export NODE_ENV to ensure it's properly set
            export NODE_ENV=production
            
            # Debug: Check environment variables
            echo "Current NODE_ENV: $NODE_ENV"
            
            # Debug: List all PM2 processes
            pm2 list
            
            # Restart the application with PM2 directly
            echo "Starting/restarting application with PM2"
            pm2 restart nilo-chat --update-env || pm2 start server.js --name nilo-chat
            
            # Debug: Verify the process is running with correct env
            pm2 list
            
            # Don't tail logs indefinitely - this causes GitHub Actions to hang
            echo "Deployment completed successfully" 